{"ast":null,"code":"import { catchError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AdminService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api'; // Remplace cette URL si besoin\n  }\n  // Ajouter une bannière\n  addBanner(formData) {\n    return this.http.post(`${this.apiUrl}/bannieres`, formData).pipe(catchError(error => {\n      console.error('Erreur lors de l\\'ajout de la bannière', error);\n      throw error; // Vous pouvez gérer l'erreur ici si nécessaire\n    }));\n  }\n  // Ajouter un événement\n  addEvent(formData) {\n    return this.http.post(`${this.apiUrl}/evenements`, formData).pipe(catchError(error => {\n      console.error('Erreur lors de l\\'ajout de l\\'événement', error);\n      throw error;\n    }));\n  }\n  // Ajouter une publicité\n  addAd(formData) {\n    return this.http.post(`${this.apiUrl}/publicites`, formData).pipe(catchError(error => {\n      console.error('Erreur lors de l\\'ajout de la publicité', error);\n      throw error;\n    }));\n  }\n  // Ajouter une vidéo\n  addVideo(formData) {\n    return this.http.post(`${this.apiUrl}/videos`, formData).pipe(catchError(error => {\n      console.error('Erreur lors de l\\'ajout de la vidéo', error);\n      throw error;\n    }));\n  }\n  // Ajouter un produit\n  addProduct(formData) {\n    return this.http.post(`${this.apiUrl}/produits`, formData).pipe(catchError(error => {\n      console.error('Erreur lors de l\\'ajout du produit', error);\n      throw error;\n    }));\n  }\n  // Ajouter un témoignage\n  addTestimonial(formData) {\n    return this.http.post(`${this.apiUrl}/temoignages`, formData).pipe(catchError(error => {\n      console.error('Erreur lors de l\\'ajout du témoignage', error);\n      throw error;\n    }));\n  }\n  // Ajouter une actualité\n  addNews(formData) {\n    return this.http.post(`${this.apiUrl}/actualites`, formData).pipe(catchError(error => {\n      console.error('Erreur lors de l\\'ajout de l\\'actualité', error);\n      throw error;\n    }));\n  }\n  static {\n    this.ɵfac = function AdminService_Factory(t) {\n      return new (t || AdminService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AdminService,\n      factory: AdminService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"AAEA,SAAqBA,UAAU,QAAQ,MAAM;;;AAW7C,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,2BAA2B,CAAC,CAAC;EAEP;EAEvC;EACAC,SAAS,CAACC,QAAkB;IAC1B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAc,GAAG,IAAI,CAACC,MAAM,YAAY,EAAEF,QAAQ,CAAC,CAACG,IAAI,CAC3ER,UAAU,CAACS,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAC9D,MAAMA,KAAK,CAAC,CAAC;IACf,CAAC,CAAC,CACH;EACH;EAEA;EACAE,QAAQ,CAACN,QAAkB;IACzB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAc,GAAG,IAAI,CAACC,MAAM,aAAa,EAAEF,QAAQ,CAAC,CAACG,IAAI,CAC5ER,UAAU,CAACS,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MAC/D,MAAMA,KAAK;IACb,CAAC,CAAC,CACH;EACH;EAEA;EACAG,KAAK,CAACP,QAAkB;IACtB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAc,GAAG,IAAI,CAACC,MAAM,aAAa,EAAEF,QAAQ,CAAC,CAACG,IAAI,CAC5ER,UAAU,CAACS,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MAC/D,MAAMA,KAAK;IACb,CAAC,CAAC,CACH;EACH;EAEA;EACAI,QAAQ,CAACR,QAAkB;IACzB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAc,GAAG,IAAI,CAACC,MAAM,SAAS,EAAEF,QAAQ,CAAC,CAACG,IAAI,CACxER,UAAU,CAACS,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC3D,MAAMA,KAAK;IACb,CAAC,CAAC,CACH;EACH;EAEA;EACAK,UAAU,CAACT,QAAkB;IAC3B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAc,GAAG,IAAI,CAACC,MAAM,WAAW,EAAEF,QAAQ,CAAC,CAACG,IAAI,CAC1ER,UAAU,CAACS,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC1D,MAAMA,KAAK;IACb,CAAC,CAAC,CACH;EACH;EAEA;EACAM,cAAc,CAACV,QAAkB;IAC/B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAc,GAAG,IAAI,CAACC,MAAM,cAAc,EAAEF,QAAQ,CAAC,CAACG,IAAI,CAC7ER,UAAU,CAACS,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC7D,MAAMA,KAAK;IACb,CAAC,CAAC,CACH;EACH;EAEA;EACAO,OAAO,CAACX,QAAkB;IACxB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAc,GAAG,IAAI,CAACC,MAAM,aAAa,EAAEF,QAAQ,CAAC,CAACG,IAAI,CAC5ER,UAAU,CAACS,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MAC/D,MAAMA,KAAK;IACb,CAAC,CAAC,CACH;EACH;;;uBAzEWR,YAAY;IAAA;EAAA;;;aAAZA,YAAY;MAAAgB,SAAZhB,YAAY;MAAAiB,YAFX;IAAM;EAAA","names":["catchError","AdminService","constructor","http","addBanner","formData","post","apiUrl","pipe","error","console","addEvent","addAd","addVideo","addProduct","addTestimonial","addNews","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\user\\webProjet\\frontend\\src\\app\\components\\admin\\admin.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, catchError } from 'rxjs';\n\n// Interface pour la réponse de l'API\ninterface ApiResponse {\n  success: boolean;\n  message: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  private apiUrl = 'http://localhost:3000/api'; // Remplace cette URL si besoin\n\n  constructor(private http: HttpClient) {}\n\n  // Ajouter une bannière\n  addBanner(formData: FormData): Observable<ApiResponse> {\n    return this.http.post<ApiResponse>(`${this.apiUrl}/bannieres`, formData).pipe(\n      catchError(error => {\n        console.error('Erreur lors de l\\'ajout de la bannière', error);\n        throw error; // Vous pouvez gérer l'erreur ici si nécessaire\n      })\n    );\n  }\n\n  // Ajouter un événement\n  addEvent(formData: FormData): Observable<ApiResponse> {\n    return this.http.post<ApiResponse>(`${this.apiUrl}/evenements`, formData).pipe(\n      catchError(error => {\n        console.error('Erreur lors de l\\'ajout de l\\'événement', error);\n        throw error;\n      })\n    );\n  }\n\n  // Ajouter une publicité\n  addAd(formData: FormData): Observable<ApiResponse> {\n    return this.http.post<ApiResponse>(`${this.apiUrl}/publicites`, formData).pipe(\n      catchError(error => {\n        console.error('Erreur lors de l\\'ajout de la publicité', error);\n        throw error;\n      })\n    );\n  }\n\n  // Ajouter une vidéo\n  addVideo(formData: FormData): Observable<ApiResponse> {\n    return this.http.post<ApiResponse>(`${this.apiUrl}/videos`, formData).pipe(\n      catchError(error => {\n        console.error('Erreur lors de l\\'ajout de la vidéo', error);\n        throw error;\n      })\n    );\n  }\n\n  // Ajouter un produit\n  addProduct(formData: FormData): Observable<ApiResponse> {\n    return this.http.post<ApiResponse>(`${this.apiUrl}/produits`, formData).pipe(\n      catchError(error => {\n        console.error('Erreur lors de l\\'ajout du produit', error);\n        throw error;\n      })\n    );\n  }\n\n  // Ajouter un témoignage\n  addTestimonial(formData: FormData): Observable<ApiResponse> {\n    return this.http.post<ApiResponse>(`${this.apiUrl}/temoignages`, formData).pipe(\n      catchError(error => {\n        console.error('Erreur lors de l\\'ajout du témoignage', error);\n        throw error;\n      })\n    );\n  }\n\n  // Ajouter une actualité\n  addNews(formData: FormData): Observable<ApiResponse> {\n    return this.http.post<ApiResponse>(`${this.apiUrl}/actualites`, formData).pipe(\n      catchError(error => {\n        console.error('Erreur lors de l\\'ajout de l\\'actualité', error);\n        throw error;\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}