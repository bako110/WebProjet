{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChildren } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nlet ContenuAccueilComponent = class ContenuAccueilComponent {\n  constructor(visibilityService, utilisateurService) {\n    this.visibilityService = visibilityService;\n    this.utilisateurService = utilisateurService;\n    this.isBannerVisible = false;\n    this.destroy$ = new Subject();\n    this.banners = [];\n    this.events = [];\n    this.ads = [];\n    this.videos = [];\n    this.products = [];\n    this.testimonials = [];\n    this.news = [];\n  }\n  ngOnInit() {\n    this.visibilityService.isVisible$.pipe(takeUntil(this.destroy$)).subscribe(visible => {\n      this.isBannerVisible = visible;\n    });\n    this.loadAllContent();\n  }\n  ngAfterViewInit() {\n    this.initVideoObserver();\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n  initVideoObserver() {\n    this.observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        const video = entry.target;\n        if (entry.isIntersecting) {\n          video.play().catch(error => console.error('Erreur lecture vidéo:', error));\n        } else {\n          video.pause();\n        }\n      });\n    }, {\n      threshold: 0.5\n    }); // 50% du player doit être visible\n    this.videoElements.changes.subscribe(() => {\n      this.videoElements.forEach(videoElement => {\n        this.observer.observe(videoElement.nativeElement);\n      });\n    });\n    // Pour les vidéos déjà présentes au début\n    this.videoElements.forEach(videoElement => {\n      this.observer.observe(videoElement.nativeElement);\n    });\n  }\n  loadAllContent() {\n    this.loadBanners();\n    this.loadEvents();\n    this.loadAds();\n    this.loadVideos();\n    this.loadProducts();\n    this.loadTestimonials();\n    this.loadNews();\n  }\n  loadBanners() {\n    this.utilisateurService.getBannieres().subscribe(data => {\n      console.log('Données témoignages reçues:', data);\n      this.banners = data.map(banner => ({\n        ...banner,\n        imageUrl: banner.image ? `http://localhost:3000/uploads/${banner.image}` : null\n      }));\n    });\n  }\n  loadEvents() {\n    this.utilisateurService.getEvenements().subscribe(data => {\n      this.events = data.map(event => ({\n        ...event,\n        imageUrl: event.image ? `http://localhost:3000/uploads/${event.image}` : null\n      }));\n    });\n  }\n  loadAds() {\n    this.utilisateurService.getPublicites().subscribe(data => {\n      this.ads = data.map(ad => ({\n        ...ad,\n        imageUrl: ad.image ? `http://localhost:3000/uploads/${ad.image}` : null\n      }));\n    });\n  }\n  loadVideos() {\n    this.utilisateurService.getVideos().subscribe(data => {\n      this.videos = data.map(video => ({\n        ...video,\n        videoUrl: video.videoUrl || '',\n        posterUrl: video.image ? `http://localhost:3000/uploads/${video.image}` : null\n      }));\n    });\n  }\n  loadProducts() {\n    this.utilisateurService.getProduits().subscribe(data => {\n      this.products = data.map(product => ({\n        ...product,\n        imageUrl: product.image ? `${this.utilisateurService.apiBaseUrl}/${product.image}` : null\n      }));\n    });\n  }\n  loadTestimonials() {\n    this.utilisateurService.getTemoignages().subscribe(data => {\n      console.log('Données témoignages reçues:', data);\n      this.testimonials = data.map(testimonial => ({\n        ...testimonial,\n        imageUrl: testimonial.image ? `http://localhost:3000/uploads/${testimonial.image}` : null\n      }));\n    });\n  }\n  loadNews() {\n    this.utilisateurService.getActualites().subscribe(data => {\n      console.log('Données témoignages reçues:', data);\n      this.news = data.map(newsItem => ({\n        ...newsItem,\n        imageUrl: newsItem.image ? `http://localhost:3000/uploads/${newsItem.image}` : null\n      }));\n    });\n  }\n};\n__decorate([ViewChildren('videoElement')], ContenuAccueilComponent.prototype, \"videoElements\", void 0);\nContenuAccueilComponent = __decorate([Component({\n  selector: 'app-contenu-accueil',\n  templateUrl: './contenu-accueil.component.html',\n  styleUrls: ['./contenu-accueil.component.css']\n})], ContenuAccueilComponent);\nexport { ContenuAccueilComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChildren","Subject","takeUntil","ContenuAccueilComponent","constructor","visibilityService","utilisateurService","ngOnInit","isVisible$","pipe","destroy$","subscribe","visible","isBannerVisible","loadAllContent","ngAfterViewInit","initVideoObserver","ngOnDestroy","next","complete","observer","disconnect","IntersectionObserver","entries","forEach","entry","video","target","isIntersecting","play","catch","error","console","pause","threshold","videoElements","changes","videoElement","observe","nativeElement","loadBanners","loadEvents","loadAds","loadVideos","loadProducts","loadTestimonials","loadNews","getBannieres","data","log","banners","map","banner","imageUrl","image","getEvenements","events","event","getPublicites","ads","ad","getVideos","videos","videoUrl","posterUrl","getProduits","products","product","apiBaseUrl","getTemoignages","testimonials","testimonial","getActualites","news","newsItem","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\user\\webProjet\\frontend\\src\\app\\components\\utlisateur\\contenu-accueil\\contenu-accueil.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy, AfterViewInit, ElementRef, ViewChildren, QueryList } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { VisibilityService } from 'src/app/services/visibility.service';  \nimport { UtilisateurService } from '../utilisateur.service';\n\n@Component({\n  selector: 'app-contenu-accueil',\n  templateUrl: './contenu-accueil.component.html',\n  styleUrls: ['./contenu-accueil.component.css']\n})\nexport class ContenuAccueilComponent implements OnInit, OnDestroy, AfterViewInit {\n  isBannerVisible = false;\n  private readonly destroy$ = new Subject<void>();\n\n  banners: any[] = [];\n  events: any[] = [];\n  ads: any[] = [];\n  videos: any[] = [];\n  products: any[] = [];\n  testimonials: any[] = [];\n  news: any[] = [];\n\n  @ViewChildren('videoElement') videoElements!: QueryList<ElementRef<HTMLVideoElement>>;\n  private observer!: IntersectionObserver;\n\n  constructor(\n    private readonly visibilityService: VisibilityService,\n    private readonly utilisateurService: UtilisateurService\n  ) {}\n\n  ngOnInit(): void {\n    this.visibilityService.isVisible$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(visible => {\n        this.isBannerVisible = visible;\n      });\n\n    this.loadAllContent();\n  }\n\n  ngAfterViewInit(): void {\n    this.initVideoObserver();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  private initVideoObserver(): void {\n    this.observer = new IntersectionObserver((entries) => {\n      entries.forEach(entry => {\n        const video = entry.target as HTMLVideoElement;\n        if (entry.isIntersecting) {\n          video.play().catch(error => console.error('Erreur lecture vidéo:', error));\n        } else {\n          video.pause();\n        }\n      });\n    }, { threshold: 0.5 }); // 50% du player doit être visible\n\n    this.videoElements.changes.subscribe(() => {\n      this.videoElements.forEach(videoElement => {\n        this.observer.observe(videoElement.nativeElement);\n      });\n    });\n\n    // Pour les vidéos déjà présentes au début\n    this.videoElements.forEach(videoElement => {\n      this.observer.observe(videoElement.nativeElement);\n    });\n  }\n\n  private loadAllContent(): void {\n    this.loadBanners();\n    this.loadEvents();\n    this.loadAds();\n    this.loadVideos();\n    this.loadProducts();\n    this.loadTestimonials();\n    this.loadNews();\n  }\n\n  private loadBanners(): void {\n    this.utilisateurService.getBannieres().subscribe(data => {\n      console.log('Données témoignages reçues:', data);\n      this.banners = data.map(banner => ({\n        ...banner,\n        imageUrl: banner.image ? `http://localhost:3000/uploads/${banner.image}` : null\n      }));\n    });\n  }\n\n  private loadEvents(): void {\n    this.utilisateurService.getEvenements().subscribe(data => {\n      this.events = data.map(event => ({\n        ...event,\n        imageUrl: event.image ? `http://localhost:3000/uploads/${event.image}` : null\n      }));\n    });\n  }\n\n  private loadAds(): void {\n    this.utilisateurService.getPublicites().subscribe(data => {\n      this.ads = data.map(ad => ({\n        ...ad,\n        imageUrl: ad.image ? `http://localhost:3000/uploads/${ad.image}` : null\n      }));\n    });\n  }\n\n  private loadVideos(): void {\n    this.utilisateurService.getVideos().subscribe(data => {\n      this.videos = data.map(video => ({\n        ...video,\n        videoUrl: video.videoUrl || '',\n        posterUrl: video.image ? `http://localhost:3000/uploads/${video.image}` : null\n      }));\n    });\n  }\n\n  private loadProducts(): void {\n    this.utilisateurService.getProduits().subscribe(data => {\n      this.products = data.map(product => ({\n        ...product,\n        imageUrl: product.image ? `${this.utilisateurService.apiBaseUrl}/${product.image}` : null\n      }));\n    });\n  }\n\n  private loadTestimonials(): void {\n    this.utilisateurService.getTemoignages().subscribe(data => {\n      console.log('Données témoignages reçues:', data);\n      this.testimonials = data.map(testimonial => ({\n        ...testimonial,\n        imageUrl: testimonial.image ? `http://localhost:3000/uploads/${testimonial.image}` : null\n      }));\n    });\n  }\n\n  private loadNews(): void {\n    this.utilisateurService.getActualites().subscribe(data => {\n      console.log('Données témoignages reçues:', data);\n      this.news = data.map(newsItem => ({\n        ...newsItem,\n        imageUrl: newsItem.image ? `http://localhost:3000/uploads/${newsItem.image}` : null\n      }));\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}