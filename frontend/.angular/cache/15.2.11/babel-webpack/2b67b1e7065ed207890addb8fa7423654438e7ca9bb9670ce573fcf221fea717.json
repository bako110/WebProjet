{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nlet ContenuAccueilComponent = class ContenuAccueilComponent {\n  constructor(visibilityService, utilisateurService) {\n    this.visibilityService = visibilityService;\n    this.utilisateurService = utilisateurService;\n    this.isBannerVisible = false;\n    this.destroy$ = new Subject();\n    this.banners = [];\n    this.events = [];\n    this.ads = [];\n    this.videos = [];\n    this.products = [];\n    this.testimonials = [];\n    this.news = [];\n  }\n  ngOnInit() {\n    // S'abonner à la visibilité du banner via le service\n    this.visibilityService.isVisible$.pipe(takeUntil(this.destroy$)).subscribe(visible => {\n      this.isBannerVisible = visible;\n    });\n    // Charger toutes les données depuis le service utilisateur\n    this.loadBanners();\n    this.loadEvents();\n    this.loadAds();\n    this.loadVideos();\n    this.loadProducts();\n    this.loadTestimonials();\n    this.loadNews();\n  }\n  ngOnDestroy() {\n    // Nettoyage des abonnements\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  loadBanners() {\n    this.utilisateurService.getBannieres().subscribe(data => {\n      this.banners = data;\n    });\n  }\n  loadEvents() {\n    this.utilisateurService.getEvenements().subscribe(data => {\n      this.events = data;\n    });\n  }\n  loadAds() {\n    this.utilisateurService.getPublicites().subscribe(data => {\n      this.ads = data;\n    });\n  }\n  loadVideos() {\n    this.utilisateurService.getVideos().subscribe(data => {\n      this.videos = data;\n    });\n  }\n  loadProducts() {\n    this.utilisateurService.getProduits().subscribe(data => {\n      this.products = data;\n    });\n  }\n  loadTestimonials() {\n    this.utilisateurService.getTemoignages().subscribe(data => {\n      this.testimonials = data;\n    });\n  }\n  loadNews() {\n    this.utilisateurService.getActualites().subscribe(data => {\n      this.news = data;\n    });\n  }\n};\nContenuAccueilComponent = __decorate([Component({\n  selector: 'app-contenu-accueil',\n  templateUrl: './contenu-accueil.component.html',\n  styleUrls: ['./contenu-accueil.component.css']\n})], ContenuAccueilComponent);\nexport { ContenuAccueilComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAA2B,eAAe;AAC5D,SAASC,OAAO,QAAQ,MAAM;AAC9B,SAASC,SAAS,QAAQ,gBAAgB;AASnC,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAYlCC,YACmBC,iBAAoC,EACpCC,kBAAsC;IADtC,sBAAiB,GAAjBD,iBAAiB;IACjB,uBAAkB,GAAlBC,kBAAkB;IAbrC,oBAAe,GAAG,KAAK;IACN,aAAQ,GAAG,IAAIL,OAAO,EAAQ;IAE/C,YAAO,GAAU,EAAE;IACnB,WAAM,GAAU,EAAE;IAClB,QAAG,GAAU,EAAE;IACf,WAAM,GAAU,EAAE;IAClB,aAAQ,GAAU,EAAE;IACpB,iBAAY,GAAU,EAAE;IACxB,SAAI,GAAU,EAAE;EAKb;EAEHM,QAAQ;IACN;IACA,IAAI,CAACF,iBAAiB,CAACG,UAAU,CAC9BC,IAAI,CAACP,SAAS,CAAC,IAAI,CAACQ,QAAQ,CAAC,CAAC,CAC9BC,SAAS,CAACC,OAAO,IAAG;MACnB,IAAI,CAACC,eAAe,GAAGD,OAAO;IAChC,CAAC,CAAC;IAEJ;IACA,IAAI,CAACE,WAAW,EAAE;IAClB,IAAI,CAACC,UAAU,EAAE;IACjB,IAAI,CAACC,OAAO,EAAE;IACd,IAAI,CAACC,UAAU,EAAE;IACjB,IAAI,CAACC,YAAY,EAAE;IACnB,IAAI,CAACC,gBAAgB,EAAE;IACvB,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAC,WAAW;IACT;IACA,IAAI,CAACX,QAAQ,CAACY,IAAI,EAAE;IACpB,IAAI,CAACZ,QAAQ,CAACa,QAAQ,EAAE;EAC1B;EAEAT,WAAW;IACT,IAAI,CAACR,kBAAkB,CAACkB,YAAY,EAAE,CAACb,SAAS,CAACc,IAAI,IAAG;MACtD,IAAI,CAACC,OAAO,GAAGD,IAAI;IACrB,CAAC,CAAC;EACJ;EAEAV,UAAU;IACR,IAAI,CAACT,kBAAkB,CAACqB,aAAa,EAAE,CAAChB,SAAS,CAACc,IAAI,IAAG;MACvD,IAAI,CAACG,MAAM,GAAGH,IAAI;IACpB,CAAC,CAAC;EACJ;EAEAT,OAAO;IACL,IAAI,CAACV,kBAAkB,CAACuB,aAAa,EAAE,CAAClB,SAAS,CAACc,IAAI,IAAG;MACvD,IAAI,CAACK,GAAG,GAAGL,IAAI;IACjB,CAAC,CAAC;EACJ;EAEAR,UAAU;IACR,IAAI,CAACX,kBAAkB,CAACyB,SAAS,EAAE,CAACpB,SAAS,CAACc,IAAI,IAAG;MACnD,IAAI,CAACO,MAAM,GAAGP,IAAI;IACpB,CAAC,CAAC;EACJ;EAEAP,YAAY;IACV,IAAI,CAACZ,kBAAkB,CAAC2B,WAAW,EAAE,CAACtB,SAAS,CAACc,IAAI,IAAG;MACrD,IAAI,CAACS,QAAQ,GAAGT,IAAI;IACtB,CAAC,CAAC;EACJ;EAEAN,gBAAgB;IACd,IAAI,CAACb,kBAAkB,CAAC6B,cAAc,EAAE,CAACxB,SAAS,CAACc,IAAI,IAAG;MACxD,IAAI,CAACW,YAAY,GAAGX,IAAI;IAC1B,CAAC,CAAC;EACJ;EAEAL,QAAQ;IACN,IAAI,CAACd,kBAAkB,CAAC+B,aAAa,EAAE,CAAC1B,SAAS,CAACc,IAAI,IAAG;MACvD,IAAI,CAACa,IAAI,GAAGb,IAAI;IAClB,CAAC,CAAC;EACJ;CACD;AAlFYtB,uBAAuB,eALnCH,SAAS,CAAC;EACTuC,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,GACWtC,uBAAuB,CAkFnC;SAlFYA,uBAAuB","names":["Component","Subject","takeUntil","ContenuAccueilComponent","constructor","visibilityService","utilisateurService","ngOnInit","isVisible$","pipe","destroy$","subscribe","visible","isBannerVisible","loadBanners","loadEvents","loadAds","loadVideos","loadProducts","loadTestimonials","loadNews","ngOnDestroy","next","complete","getBannieres","data","banners","getEvenements","events","getPublicites","ads","getVideos","videos","getProduits","products","getTemoignages","testimonials","getActualites","news","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\user\\webProjet\\frontend\\src\\app\\components\\utlisateur\\contenu-accueil\\contenu-accueil.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { VisibilityService } from 'src/app/services/visibility.service';  // Service de visibilité\nimport { UtilisateurService } from 'isateur\n\n@Component({\n  selector: 'app-contenu-accueil',\n  templateUrl: './contenu-accueil.component.html',\n  styleUrls: ['./contenu-accueil.component.css']\n})\nexport class ContenuAccueilComponent implements OnInit, OnDestroy {\n  isBannerVisible = false;\n  private readonly destroy$ = new Subject<void>();\n\n  banners: any[] = [];\n  events: any[] = [];\n  ads: any[] = [];\n  videos: any[] = [];\n  products: any[] = [];\n  testimonials: any[] = [];\n  news: any[] = [];\n\n  constructor(\n    private readonly visibilityService: VisibilityService,\n    private readonly utilisateurService: UtilisateurService\n  ) {}\n\n  ngOnInit(): void {\n    // S'abonner à la visibilité du banner via le service\n    this.visibilityService.isVisible$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(visible => {\n        this.isBannerVisible = visible;\n      });\n\n    // Charger toutes les données depuis le service utilisateur\n    this.loadBanners();\n    this.loadEvents();\n    this.loadAds();\n    this.loadVideos();\n    this.loadProducts();\n    this.loadTestimonials();\n    this.loadNews();\n  }\n\n  ngOnDestroy(): void {\n    // Nettoyage des abonnements\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  loadBanners() {\n    this.utilisateurService.getBannieres().subscribe(data => {\n      this.banners = data;\n    });\n  }\n\n  loadEvents() {\n    this.utilisateurService.getEvenements().subscribe(data => {\n      this.events = data;\n    });\n  }\n\n  loadAds() {\n    this.utilisateurService.getPublicites().subscribe(data => {\n      this.ads = data;\n    });\n  }\n\n  loadVideos() {\n    this.utilisateurService.getVideos().subscribe(data => {\n      this.videos = data;\n    });\n  }\n\n  loadProducts() {\n    this.utilisateurService.getProduits().subscribe(data => {\n      this.products = data;\n    });\n  }\n\n  loadTestimonials() {\n    this.utilisateurService.getTemoignages().subscribe(data => {\n      this.testimonials = data;\n    });\n  }\n\n  loadNews() {\n    this.utilisateurService.getActualites().subscribe(data => {\n      this.news = data;\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}