{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AdminService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api'; // Remplace par l'URL de ton backend\n  }\n  // Ajouter une bannière\n  addBanner(bannerData) {\n    return this.http.post(`${this.apiUrl}/banniere`, bannerData);\n  }\n  // Ajouter un événement\n  addEvent(eventData) {\n    return this.http.post(`${this.apiUrl}/evenement`, eventData);\n  }\n  static {\n    this.ɵfac = function AdminService_Factory(t) {\n      return new (t || AdminService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AdminService,\n      factory: AdminService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,2BAA2B,CAAC,CAAE;EAER;EAEvC;EACAC,SAAS,CAACC,UAAoB;IAC5B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,MAAM,WAAW,EAAEF,UAAU,CAAC;EAC9D;EAEA;EACAG,QAAQ,CAACC,SAAmB;IAC1B,OAAO,IAAI,CAACN,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,MAAM,YAAY,EAAEE,SAAS,CAAC;EAC9D;;;uBAbWR,YAAY;IAAA;EAAA;;;aAAZA,YAAY;MAAAS,SAAZT,YAAY;MAAAU,YAFX;IAAM;EAAA","names":["AdminService","constructor","http","addBanner","bannerData","post","apiUrl","addEvent","eventData","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\user\\webProjet\\frontend\\src\\app\\components\\admin\\admin.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminService {\n  private apiUrl = 'http://localhost:3000/api';  // Remplace par l'URL de ton backend\n\n  constructor(private http: HttpClient) {}\n\n  // Ajouter une bannière\n  addBanner(bannerData: FormData): Observable<any> {\n    return this.http.post(`${this.apiUrl}/banniere`, bannerData);\n  }\n\n  // Ajouter un événement\n  addEvent(eventData: FormData): Observable<any> {\n    return this.http.post(`${this.apiUrl}/evenement`, eventData);\n  }\n\n  // Ajouter d'autres sections comme les produits, témoignages, etc.\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}